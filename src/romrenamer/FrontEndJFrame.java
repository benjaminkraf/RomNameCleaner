/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romrenamer;

import java.io.File;
import java.util.Arrays;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;

/**
 *
 * @author Benjamin I. Kraftchick
 */
public class FrontEndJFrame extends javax.swing.JFrame {
    
    File folder;
    File[] files;
    String fileName, fileExtension, filePath; 
    /**
     * Creates new form FrontEndJFrame
     */
    public FrontEndJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jButtonShowFiles = new javax.swing.JButton();
        jButtonCleanFileNames = new javax.swing.JButton();
        jTextFieldShowPath = new javax.swing.JTextField();
        jButtonFolderSelect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea.setEditable(false);
        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        jButtonShowFiles.setText("Show Files");
        jButtonShowFiles.setEnabled(false);
        jButtonShowFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowFilesActionPerformed(evt);
            }
        });

        jButtonCleanFileNames.setText("Clean File Names");
        jButtonCleanFileNames.setEnabled(false);
        jButtonCleanFileNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCleanFileNamesActionPerformed(evt);
            }
        });

        jTextFieldShowPath.setEditable(false);
        jTextFieldShowPath.setText("Please select your folder.");

        jButtonFolderSelect.setText("Select folder");
        jButtonFolderSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFolderSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButtonShowFiles)
                .addGap(18, 18, 18)
                .addComponent(jButtonCleanFileNames)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButtonFolderSelect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldShowPath, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldShowPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFolderSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCleanFileNames)
                    .addComponent(jButtonShowFiles))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonShowFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowFilesActionPerformed
        // TODO add your handling code here:
        jTextArea.setText(Arrays.toString(files));
    }//GEN-LAST:event_jButtonShowFilesActionPerformed

    private void jButtonCleanFileNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCleanFileNamesActionPerformed
        // TODO add your handling code here:
        for (File tempFile : files) {
            //loops through File[] files (array of files in folder from filepath)
            //sets tempFile to the current file
            fileName = tempFile.getName(); //gets the name of the current file
            fileExtension = fileName.substring(fileName.lastIndexOf("."));
            jTextArea.append("Original file name: " + fileName + "\n");
            
            String newFileName = fileName.substring(0,fileName.indexOf("(")).trim() + fileExtension;
            jTextArea.append("New file name: " + newFileName + "\n\n");
            String newFilePath = filePath+newFileName;
            File renamedFile = new File(newFilePath);
            tempFile.renameTo(renamedFile);  
        }
        jTextArea.append("\n\nFinished cleaning.");
    }//GEN-LAST:event_jButtonCleanFileNamesActionPerformed

    private void jButtonFolderSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFolderSelectActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fileChooser.showOpenDialog(null);
        
        if(returnVal==JFileChooser.APPROVE_OPTION){
            folder = fileChooser.getSelectedFile();
            files = folder.listFiles();                       //File Array of files in folder from above
            filePath = folder.getPath()+"\\";
            jTextFieldShowPath.setText(filePath);
            jButtonShowFiles.setEnabled(true);
            jButtonCleanFileNames.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonFolderSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrontEndJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrontEndJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrontEndJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontEndJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrontEndJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCleanFileNames;
    private javax.swing.JButton jButtonFolderSelect;
    private javax.swing.JButton jButtonShowFiles;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JTextField jTextFieldShowPath;
    // End of variables declaration//GEN-END:variables
}
